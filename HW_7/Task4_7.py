"""
Задание 4.
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса
(метод init()), который должен принимать данные (список списков)
для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в
виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

31 22
37 43
51 86

3 5 32
2 4 6
-1 64 -8

3 5 8 3
8 3 7 1

Следующий шаг — реализовать перегрузку метода str() для вывода матрицы в
привычном виде.
Далее реализовать перегрузку метода add() для реализации операции сложения двух
 объектов класса Matrix (двух матриц). Результатом сложения должна быть новая
 матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент
первой строки первой матрицы складываем с первым элементом первой строки второй
 матрицы и т.д.

"""


class Matrix:
    def __init__(self, matrix):
        self.matrix = matrix

    def __str__(self):
        st = ''
        for i in range(len(self.matrix)):
            st = st + '\t'.join(map(str, self.matrix[i])) + '\n'
        return st

    def __add__(self, other):
        if len(self.matrix) != len(other.matrix):
            return None
        for i in range(len(self.matrix)):
            for k in range(len(self.matrix[i])):
                self.matrix[i][k] = self.matrix[i][k] + other.matrix[i][k]
        return Matrix(self.matrix)


m1 = Matrix([[31, 22, 3], [33, 76, 4], [22, 66, 7]])
m2 = Matrix([[5, 8, 7], [3, 8, 7], [1, 1, 7]])

print(m1)
print(m2)
print(f'Сумма матриц \n{m1 + m2}')
